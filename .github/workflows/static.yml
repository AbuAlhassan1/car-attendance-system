# Workflow for deploying car attendance system to GitHub Pages
name: Deploy Car Attendance System

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflowjs ultralytics

      - name: Convert YOLOv8 Model
        run: python scripts/convert_model.py

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build static files
        run: |
          # Ensure all directories exist
          mkdir -p docs/model docs/driver_photos docs/qr_codes

          # Copy the converted model
          cp -r static/model/* docs/model/

          # Copy existing driver photos and QR codes
          cp -r static/driver_photos/* docs/driver_photos/ || true
          cp -r static/qr_codes/* docs/qr_codes/ || true

          # Create artifact directory
          mkdir -p _site
          cp -r docs/* _site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
